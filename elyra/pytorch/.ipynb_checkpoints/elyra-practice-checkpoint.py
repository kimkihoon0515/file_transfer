#
# Generated by Elyra 3.14.1
#
import kfp
import kfp.aws
from kubernetes.client import *
from kubernetes.client.models import *


component_def_086e7c5a5a65c94186fc8a8a7442718168bdd5a8014d6e625fe40c9c2f9c2950 = """
name: Run a file
description: Run a Jupyter notebook or Python/R script

implementation:
  container:
    image: pytorch/pytorch:1.4-cuda10.1-cudnn7-runtime
    command: [sh, -c]
    args:
    - |
      sh -c "mkdir -p ./jupyter-work-dir && cd ./jupyter-work-dir"
      sh -c "echo 'Downloading https://raw.githubusercontent.com/elyra-ai/elyra/v3.14.1/elyra/kfp/bootstrapper.py' && curl --fail -H 'Cache-Control: no-cache' -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.14.1/elyra/kfp/bootstrapper.py --output bootstrapper.py"
      sh -c "echo 'Downloading https://raw.githubusercontent.com/elyra-ai/elyra/v3.14.1/etc/generic/requirements-elyra.txt' && curl --fail -H 'Cache-Control: no-cache' -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.14.1/etc/generic/requirements-elyra.txt --output requirements-elyra.txt"
      sh -c "echo 'Downloading https://raw.githubusercontent.com/elyra-ai/elyra/v3.14.1/etc/generic/requirements-elyra-py37.txt' && curl --fail -H 'Cache-Control: no-cache' -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.14.1/etc/generic/requirements-elyra-py37.txt --output requirements-elyra-py37.txt"
      sh -c "python3 -m pip install  packaging && python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py --pipeline-name 'elyra-practice' --cos-endpoint 'http://172.17.0.35:9000' --cos-bucket 'elyra-bucket' --cos-directory 'elyra-practice-0122113337' --cos-dependencies-archive 'data-627a3d09-9b8c-4363-bec8-cf1e7cb5c729.tar.gz' --file 'pytorch/data.py' "
"""

factory_086e7c5a5a65c94186fc8a8a7442718168bdd5a8014d6e625fe40c9c2f9c2950 = (
    kfp.components.load_component_from_text(
        component_def_086e7c5a5a65c94186fc8a8a7442718168bdd5a8014d6e625fe40c9c2f9c2950
    )
)

component_def_ac936095a68eaa3c0a75927829bc93821cc4c913e09d9589ad4bdd99e562e353 = """
name: Run a file
description: Run a Jupyter notebook or Python/R script

implementation:
  container:
    image: pytorch/pytorch:1.4-cuda10.1-cudnn7-runtime
    command: [sh, -c]
    args:
    - |
      sh -c "mkdir -p ./jupyter-work-dir && cd ./jupyter-work-dir"
      sh -c "echo 'Downloading https://raw.githubusercontent.com/elyra-ai/elyra/v3.14.1/elyra/kfp/bootstrapper.py' && curl --fail -H 'Cache-Control: no-cache' -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.14.1/elyra/kfp/bootstrapper.py --output bootstrapper.py"
      sh -c "echo 'Downloading https://raw.githubusercontent.com/elyra-ai/elyra/v3.14.1/etc/generic/requirements-elyra.txt' && curl --fail -H 'Cache-Control: no-cache' -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.14.1/etc/generic/requirements-elyra.txt --output requirements-elyra.txt"
      sh -c "echo 'Downloading https://raw.githubusercontent.com/elyra-ai/elyra/v3.14.1/etc/generic/requirements-elyra-py37.txt' && curl --fail -H 'Cache-Control: no-cache' -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.14.1/etc/generic/requirements-elyra-py37.txt --output requirements-elyra-py37.txt"
      sh -c "python3 -m pip install  packaging && python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py --pipeline-name 'elyra-practice' --cos-endpoint 'http://172.17.0.35:9000' --cos-bucket 'elyra-bucket' --cos-directory 'elyra-practice-0122113337' --cos-dependencies-archive 'train-63136ba5-6c8a-4ff8-b25e-2a59b7dae226.tar.gz' --file 'pytorch/train.py' "
"""

factory_ac936095a68eaa3c0a75927829bc93821cc4c913e09d9589ad4bdd99e562e353 = (
    kfp.components.load_component_from_text(
        component_def_ac936095a68eaa3c0a75927829bc93821cc4c913e09d9589ad4bdd99e562e353
    )
)


@kfp.dsl.pipeline(name="elyra-practice")
def generated_pipeline():

    # Task for node 'data'
    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729 = (
        factory_086e7c5a5a65c94186fc8a8a7442718168bdd5a8014d6e625fe40c9c2f9c2950()
    )

    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.output_artifact_paths[
        "mlpipeline-metrics"
    ] = "/tmp/mlpipeline-metrics.json"
    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.output_artifact_paths[
        "mlpipeline-ui-metadata"
    ] = "/tmp/mlpipeline-ui-metadata.json"

    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.set_display_name("data")

    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.add_env_variable(
        V1EnvVar(name="ELYRA_RUNTIME_ENV", value="kfp")
    )

    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.add_env_variable(
        V1EnvVar(name="AWS_ACCESS_KEY_ID", value="minio")
    )

    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.add_env_variable(
        V1EnvVar(name="AWS_SECRET_ACCESS_KEY", value="minio123")
    )

    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.add_env_variable(
        V1EnvVar(name="ELYRA_ENABLE_PIPELINE_INFO", value="True")
    )

    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.add_env_variable(
        V1EnvVar(name="ELYRA_WRITABLE_CONTAINER_DIR", value="/tmp")
    )

    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.add_env_variable(
        V1EnvVar(name="ELYRA_RUN_NAME", value="{{workflow.uid}}")
    )

    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.add_pod_label(
        "elyra/node-type", "notebook-script"
    )

    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.add_pod_label(
        "elyra/pipeline-name", "elyra-practice"
    )

    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.add_pod_label(
        "elyra/pipeline-version", ""
    )

    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.add_pod_label("elyra/experiment-name", "")

    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.add_pod_label("elyra/node-name", "data")

    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.add_pod_annotation(
        "elyra/node-file-name", """pytorch/data.py"""
    )

    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.add_pod_annotation(
        "elyra/pipeline-source", """elyra-practice.pipeline"""
    )

    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.add_volume(
        V1Volume(
            name="model-volume",
            persistent_volume_claim=V1PersistentVolumeClaimVolumeSource(
                claim_name="model-volume",
            ),
        )
    )
    task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729.container.add_volume_mount(
        V1VolumeMount(
            mount_path="/home/jovyan",
            name="model-volume",
            read_only=False,
        )
    )

    # Task for node 'train'
    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226 = (
        factory_ac936095a68eaa3c0a75927829bc93821cc4c913e09d9589ad4bdd99e562e353()
    )

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.output_artifact_paths[
        "mlpipeline-metrics"
    ] = "/tmp/mlpipeline-metrics.json"
    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.output_artifact_paths[
        "mlpipeline-ui-metadata"
    ] = "/tmp/mlpipeline-ui-metadata.json"

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.set_display_name("train")

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.add_env_variable(
        V1EnvVar(name="ELYRA_RUNTIME_ENV", value="kfp")
    )

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.add_env_variable(
        V1EnvVar(name="AWS_ACCESS_KEY_ID", value="minio")
    )

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.add_env_variable(
        V1EnvVar(name="AWS_SECRET_ACCESS_KEY", value="minio123")
    )

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.add_env_variable(
        V1EnvVar(name="ELYRA_ENABLE_PIPELINE_INFO", value="True")
    )

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.add_env_variable(
        V1EnvVar(name="ELYRA_WRITABLE_CONTAINER_DIR", value="/tmp")
    )

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.add_env_variable(
        V1EnvVar(name="ELYRA_RUN_NAME", value="{{workflow.uid}}")
    )

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.add_pod_label(
        "elyra/node-type", "notebook-script"
    )

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.add_pod_label(
        "elyra/pipeline-name", "elyra-practice"
    )

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.add_pod_label(
        "elyra/pipeline-version", ""
    )

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.add_pod_label("elyra/experiment-name", "")

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.add_pod_label("elyra/node-name", "train")

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.add_pod_annotation(
        "elyra/node-file-name", """pytorch/train.py"""
    )

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.add_pod_annotation(
        "elyra/pipeline-source", """elyra-practice.pipeline"""
    )

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.add_volume(
        V1Volume(
            name="model-volume",
            persistent_volume_claim=V1PersistentVolumeClaimVolumeSource(
                claim_name="model-volume",
            ),
        )
    )
    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.container.add_volume_mount(
        V1VolumeMount(
            mount_path="/home/jovyan",
            name="model-volume",
            read_only=False,
        )
    )

    task_63136ba5_6c8a_4ff8_b25e_2a59b7dae226.after(
        task_627a3d09_9b8c_4363_bec8_cf1e7cb5c729
    )


if __name__ == "__main__":
    from pathlib import Path

    kfp.compiler.Compiler().compile(
        pipeline_func=generated_pipeline,
        package_path=Path(__file__).with_suffix(".yaml").name,
    )
